//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CheapLoansWPF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LoansDatabaseEntities : DbContext
    {
        public LoansDatabaseEntities()
            : base("name=LoansDatabaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Loan> Loans { get; set; }
    
        public virtual int InsertProcedure(string pName, Nullable<double> pLoanAmt, Nullable<double> pAnnualInt, Nullable<int> pNumPayments)
        {
            var pNameParameter = pName != null ?
                new ObjectParameter("pName", pName) :
                new ObjectParameter("pName", typeof(string));
    
            var pLoanAmtParameter = pLoanAmt.HasValue ?
                new ObjectParameter("pLoanAmt", pLoanAmt) :
                new ObjectParameter("pLoanAmt", typeof(double));
    
            var pAnnualIntParameter = pAnnualInt.HasValue ?
                new ObjectParameter("pAnnualInt", pAnnualInt) :
                new ObjectParameter("pAnnualInt", typeof(double));
    
            var pNumPaymentsParameter = pNumPayments.HasValue ?
                new ObjectParameter("pNumPayments", pNumPayments) :
                new ObjectParameter("pNumPayments", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProcedure", pNameParameter, pLoanAmtParameter, pAnnualIntParameter, pNumPaymentsParameter);
        }
    
        public virtual ObjectResult<SelectAllProcedure_Result> SelectAllProcedure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllProcedure_Result>("SelectAllProcedure");
        }
    }
}
